<?php
/*
 * PersonalCloudStorageAPIsLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ) on 10/13/2016
 */

namespace PersonalCloudStorageAPIsLib;

use PersonalCloudStorageAPIsLib\Controllers;

/**
 * PersonalCloudStorageAPIsLib client class
 */
class PersonalCloudStorageAPIsClient
{
    /**
     * Constructor with authentication and configuration parameters
     */
    public function __construct($oAuthAccessToken = NULL)
    {
        Configuration::$oAuthAccessToken = $oAuthAccessToken ? $oAuthAccessToken : Configuration::$oAuthAccessToken;
    }
 
    /**
     * Singleton access to FilesFolders controller
     * @return Controllers\FilesFoldersController The *Singleton* instance
     */
    public function getFilesFolders()
    {
        return Controllers\FilesFoldersController::getInstance();
    }
 
    /**
     * Singleton access to Playlists controller
     * @return Controllers\PlaylistsController The *Singleton* instance
     */
    public function getPlaylists()
    {
        return Controllers\PlaylistsController::getInstance();
    }
 
    /**
     * Singleton access to Shares controller
     * @return Controllers\SharesController The *Singleton* instance
     */
    public function getShares()
    {
        return Controllers\SharesController::getInstance();
    }
 
    /**
     * Singleton access to Tags controller
     * @return Controllers\TagsController The *Singleton* instance
     */
    public function getTags()
    {
        return Controllers\TagsController::getInstance();
    }
 
    /**
     * Singleton access to AccountInfo controller
     * @return Controllers\AccountInfoController The *Singleton* instance
     */
    public function getAccountInfo()
    {
        return Controllers\AccountInfoController::getInstance();
    }
 
    /**
     * Singleton access to Contacts controller
     * @return Controllers\ContactsController The *Singleton* instance
     */
    public function getContacts()
    {
        return Controllers\ContactsController::getInstance();
    }
}