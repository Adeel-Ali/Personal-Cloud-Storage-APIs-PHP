<?php 
/*
 * PersonalCloudStorageAPIsLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ) on 10/13/2016
 */

namespace PersonalCloudStorageAPIsLib\Models;

use JsonSerializable;

/**
 * @todo Write general description for this model
 */
class FopsChangeRequest implements JsonSerializable {
    /**
     * Full path of the file/folder for copy/move/rename operations.
     * @required
     * @var string $src public property
     */
    public $src;

    /**
     * Full path of the target file/folder for copy/move/rename operations. In case of files the full/changed name should be included in the target.
     * @required
     * @var string $target public property
     */
    public $target;

    /**
     * If 'true', ensures that name conflicts are resolved according to the value of the 'conflictsolve' parameter. Defaults to 'false', in which case the operation will overwrite an existing file/folder of the same name.
     * @required
     * @var bool $safe public property
     */
    public $safe;

    /**
     * Defines how name conflicts are resolved, if the 'safe' parameter is set to 'true'. If set to 'copy', a new file is written to the destination folder with a non-conflicting name. If not set, the operation is rolled back and operation returns '409 Conflict'.
     * @required
     * @var string $conflictsolve public property
     */
    public $conflictsolve;

    /**
     * Constructor to set initial or default values of member properties
     * @param   string            $src             Initialization value for the property $this->src          
     * @param   string            $target          Initialization value for the property $this->target       
     * @param   bool              $safe            Initialization value for the property $this->safe         
     * @param   string            $conflictsolve   Initialization value for the property $this->conflictsolve
     */
    public function __construct()
    {
        switch(func_num_args())      
        {
            case 4:
                $this->src           = func_get_arg(0);
                $this->target        = func_get_arg(1);
                $this->safe          = func_get_arg(2);
                $this->conflictsolve = func_get_arg(3);
                break;

            default:
                $this->safe = FALSE;
                break;
        }
    }


    /**
     * Encode this object to JSON
     */
    public function jsonSerialize()
    {
        $json = array();
        $json['src']           = $this->src;
        $json['target']        = $this->target;
        $json['safe']          = $this->safe;
        $json['conflictsolve'] = $this->conflictsolve;

        return $json;
    }
}