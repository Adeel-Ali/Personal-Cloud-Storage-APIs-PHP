<?php 
/*
 * PersonalCloudStorageAPIsLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ) on 10/13/2016
 */

namespace PersonalCloudStorageAPIsLib\Models;

use JsonSerializable;

/**
 * @todo Write general description for this model
 */
class FopsCopyRequest implements JsonSerializable {
    /**
     * Full path of the file/folder for copy/move/rename operations.
     * @required
     * @var string $src public property
     */
    public $src;

    /**
     * Full path of the target file/folder for copy/move/rename operations. In case of files the full/changed name should be included in the target.
     * @required
     * @var string $target public property
     */
    public $target;

    /**
     * If 'true', ensures that name conflicts are resolved according to the value of the 'conflictsolve' parameter. Defaults to 'false', in which case the operation will overwrite an existing file/folder of the same name.
     * @required
     * @var bool $safe public property
     */
    public $safe;

    /**
     * Defines how name conflicts are resolved, if the 'safe' parameter is set to 'true'. If set to 'copy', a new file is written to the destination folder with a non-conflicting name. If not set, the operation is rolled back and operation returns '409 Conflict'.
     * @required
     * @var string $conflictsolve public property
     */
    public $conflictsolve;

    /**
     * Specifies what happens if a file of the same name exists at the target path and the 'safe' parameter is not set. Set to 'overwrite' to treat the copied file as completely new. Set to 'modify' to treat the new file as a modification of the old one. If the 'override' parameter is not set, the following algorithm is used: if the existing file has a 'deleted' attribute set to 'true', the file is overwritten; if the old file's 'deleted' attribute is false or not set, the file is modified.
     * @required
     * @var string $override public property
     */
    public $override;

    /**
     * Constructor to set initial or default values of member properties
     * @param   string            $src             Initialization value for the property $this->src          
     * @param   string            $target          Initialization value for the property $this->target       
     * @param   bool              $safe            Initialization value for the property $this->safe         
     * @param   string            $conflictsolve   Initialization value for the property $this->conflictsolve
     * @param   string            $override        Initialization value for the property $this->override     
     */
    public function __construct()
    {
        switch(func_num_args())      
        {
            case 5:
                $this->src           = func_get_arg(0);
                $this->target        = func_get_arg(1);
                $this->safe          = func_get_arg(2);
                $this->conflictsolve = func_get_arg(3);
                $this->override      = func_get_arg(4);
                break;

            default:
                $this->safe = FALSE;
                break;
        }
    }


    /**
     * Encode this object to JSON
     */
    public function jsonSerialize()
    {
        $json = array();
        $json['src']           = $this->src;
        $json['target']        = $this->target;
        $json['safe']          = $this->safe;
        $json['conflictsolve'] = $this->conflictsolve;
        $json['override']      = $this->override;

        return $json;
    }
}